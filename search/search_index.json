{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Executable Workflow Documentation : https://namuan.github.io/py-executable-checklist Source Code : https://github.com/namuan/py-executable-checklist PyPI : https://pypi.org/project/py-executable-checklist/ Helper classes to develop executable workflow scripts Installation pip install py-executable-checklist Example Usage import logging from argparse import ArgumentParser, RawDescriptionHelpFormatter from py_executable_checklist.workflow import run_workflow, WorkflowBase # Common functions across steps # Workflow steps class DoSomething(WorkflowBase): \"\"\" Go to this page Copy the command Run the command Copy the output and paste it into the email \"\"\" username: str def execute(self): logging.info(f\"Hello {self.username}\") # output return {\"greetings\": f\"Hello {self.username}\"} # Workflow definition def workflow(): return [ DoSomething, ] # Boilerplate def parse_args(): parser = ArgumentParser( description=__doc__, formatter_class=RawDescriptionHelpFormatter ) parser.add_argument(\"-u\", \"--username\", type=str, required=True, help=\"User name\") parser.add_argument( \"-v\", \"--verbose\", action=\"store_true\", default=False, dest=\"verbose\", help=\"Display context variables at each step\", ) return parser.parse_args() def main(args): context = args.__dict__ run_workflow(context, workflow()) if __name__ == \"__main__\": args = parse_args() main(args) Development Clone this repository Requirements: Poetry Python 3.7+ Create a virtual environment and install the dependencies poetry install Activate the virtual environment poetry shell Validating build make build Release process A release is automatically published when a new version is bumped using make bump . See .github/workflows/build.yml for more details. Once the release is published, .github/workflows/publish.yml will automatically publish it to PyPI.","title":"Introduction"},{"location":"#executable-workflow","text":"Documentation : https://namuan.github.io/py-executable-checklist Source Code : https://github.com/namuan/py-executable-checklist PyPI : https://pypi.org/project/py-executable-checklist/ Helper classes to develop executable workflow scripts","title":"Executable Workflow"},{"location":"#installation","text":"pip install py-executable-checklist","title":"Installation"},{"location":"#example-usage","text":"import logging from argparse import ArgumentParser, RawDescriptionHelpFormatter from py_executable_checklist.workflow import run_workflow, WorkflowBase # Common functions across steps # Workflow steps class DoSomething(WorkflowBase): \"\"\" Go to this page Copy the command Run the command Copy the output and paste it into the email \"\"\" username: str def execute(self): logging.info(f\"Hello {self.username}\") # output return {\"greetings\": f\"Hello {self.username}\"} # Workflow definition def workflow(): return [ DoSomething, ] # Boilerplate def parse_args(): parser = ArgumentParser( description=__doc__, formatter_class=RawDescriptionHelpFormatter ) parser.add_argument(\"-u\", \"--username\", type=str, required=True, help=\"User name\") parser.add_argument( \"-v\", \"--verbose\", action=\"store_true\", default=False, dest=\"verbose\", help=\"Display context variables at each step\", ) return parser.parse_args() def main(args): context = args.__dict__ run_workflow(context, workflow()) if __name__ == \"__main__\": args = parse_args() main(args)","title":"Example Usage"},{"location":"#development","text":"Clone this repository Requirements: Poetry Python 3.7+ Create a virtual environment and install the dependencies poetry install Activate the virtual environment poetry shell","title":"Development"},{"location":"#validating-build","text":"make build","title":"Validating build"},{"location":"#release-process","text":"A release is automatically published when a new version is bumped using make bump . See .github/workflows/build.yml for more details. Once the release is published, .github/workflows/publish.yml will automatically publish it to PyPI.","title":"Release process"},{"location":"changelog/","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . 1.4.0 (2023-02-04) Feat Trim lines to reduce screen space used 1.3.1 (2023-01-01) Refactor Remove unnecessary files 1.3.0 (2023-01-01) Feat Use proper way to identify verbosity for logging Refactor ward -> pytest 1.2.0 (2022-05-26) Feat Support defining sub(child) workflows from within a step definition 1.1.0 (2022-05-26) Feat Ignore any private variables defined inside step definition 1.0.0 (2022-02-06) Feat Allow steps to return data instead of setting a global variable BREAKING CHANGE Removed run(...) as it is replaced with execute() 0.11.0 (2022-02-06) Feat Allow steps to return data for updating context 0.10.2 (2022-02-06) Fix Update documentation 0.10.1 (2021-12-26) Fix Using PAT for running update dependencies workflow 0.10.0 (2021-12-26) Feat Added command to initialise a new project 0.9.0 (2021-12-25) Feat Add support for running workflow steps 0.8.3 (2021-12-25) Fix Remove jekyll theme 0.8.2 (2021-12-25) Fix Using latest version and added job dependency 0.8.1 (2021-12-25) Fix Using correct property name 0.8.0 (2021-12-25) Feat Using support GH action 0.7.0 (2021-12-25) Feat Using personal token so that GH can trigger another workflow 0.6.0 (2021-12-25) Feat Auto publish release if version is bumped 0.5.0 (2021-12-25) Feat Rename project 0.4.0 (2021-12-25) Feat Allow bumping version after build is successful Fix Use set-output instead of set-env (deprecated from GH actions) 0.3.0 (2021-12-25) Feat Add capability to wait for a user action 0.2.0 (2021-12-25) Feat Add capability to send notification 0.1.0 (2021-12-25) Feat Add command to build package locally Ability to run shell commands Add make command for running tests Initial commit","title":"Changelog"},{"location":"changelog/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"changelog/#140-2023-02-04","text":"","title":"1.4.0 (2023-02-04)"},{"location":"changelog/#feat","text":"Trim lines to reduce screen space used","title":"Feat"},{"location":"changelog/#131-2023-01-01","text":"","title":"1.3.1 (2023-01-01)"},{"location":"changelog/#refactor","text":"Remove unnecessary files","title":"Refactor"},{"location":"changelog/#130-2023-01-01","text":"","title":"1.3.0 (2023-01-01)"},{"location":"changelog/#feat_1","text":"Use proper way to identify verbosity for logging","title":"Feat"},{"location":"changelog/#refactor_1","text":"ward -> pytest","title":"Refactor"},{"location":"changelog/#120-2022-05-26","text":"","title":"1.2.0 (2022-05-26)"},{"location":"changelog/#feat_2","text":"Support defining sub(child) workflows from within a step definition","title":"Feat"},{"location":"changelog/#110-2022-05-26","text":"","title":"1.1.0 (2022-05-26)"},{"location":"changelog/#feat_3","text":"Ignore any private variables defined inside step definition","title":"Feat"},{"location":"changelog/#100-2022-02-06","text":"","title":"1.0.0 (2022-02-06)"},{"location":"changelog/#feat_4","text":"Allow steps to return data instead of setting a global variable","title":"Feat"},{"location":"changelog/#breaking-change","text":"Removed run(...) as it is replaced with execute()","title":"BREAKING CHANGE"},{"location":"changelog/#0110-2022-02-06","text":"","title":"0.11.0 (2022-02-06)"},{"location":"changelog/#feat_5","text":"Allow steps to return data for updating context","title":"Feat"},{"location":"changelog/#0102-2022-02-06","text":"","title":"0.10.2 (2022-02-06)"},{"location":"changelog/#fix","text":"Update documentation","title":"Fix"},{"location":"changelog/#0101-2021-12-26","text":"","title":"0.10.1 (2021-12-26)"},{"location":"changelog/#fix_1","text":"Using PAT for running update dependencies workflow","title":"Fix"},{"location":"changelog/#0100-2021-12-26","text":"","title":"0.10.0 (2021-12-26)"},{"location":"changelog/#feat_6","text":"Added command to initialise a new project","title":"Feat"},{"location":"changelog/#090-2021-12-25","text":"","title":"0.9.0 (2021-12-25)"},{"location":"changelog/#feat_7","text":"Add support for running workflow steps","title":"Feat"},{"location":"changelog/#083-2021-12-25","text":"","title":"0.8.3 (2021-12-25)"},{"location":"changelog/#fix_2","text":"Remove jekyll theme","title":"Fix"},{"location":"changelog/#082-2021-12-25","text":"","title":"0.8.2 (2021-12-25)"},{"location":"changelog/#fix_3","text":"Using latest version and added job dependency","title":"Fix"},{"location":"changelog/#081-2021-12-25","text":"","title":"0.8.1 (2021-12-25)"},{"location":"changelog/#fix_4","text":"Using correct property name","title":"Fix"},{"location":"changelog/#080-2021-12-25","text":"","title":"0.8.0 (2021-12-25)"},{"location":"changelog/#feat_8","text":"Using support GH action","title":"Feat"},{"location":"changelog/#070-2021-12-25","text":"","title":"0.7.0 (2021-12-25)"},{"location":"changelog/#feat_9","text":"Using personal token so that GH can trigger another workflow","title":"Feat"},{"location":"changelog/#060-2021-12-25","text":"","title":"0.6.0 (2021-12-25)"},{"location":"changelog/#feat_10","text":"Auto publish release if version is bumped","title":"Feat"},{"location":"changelog/#050-2021-12-25","text":"","title":"0.5.0 (2021-12-25)"},{"location":"changelog/#feat_11","text":"Rename project","title":"Feat"},{"location":"changelog/#040-2021-12-25","text":"","title":"0.4.0 (2021-12-25)"},{"location":"changelog/#feat_12","text":"Allow bumping version after build is successful","title":"Feat"},{"location":"changelog/#fix_5","text":"Use set-output instead of set-env (deprecated from GH actions)","title":"Fix"},{"location":"changelog/#030-2021-12-25","text":"","title":"0.3.0 (2021-12-25)"},{"location":"changelog/#feat_13","text":"Add capability to wait for a user action","title":"Feat"},{"location":"changelog/#020-2021-12-25","text":"","title":"0.2.0 (2021-12-25)"},{"location":"changelog/#feat_14","text":"Add capability to send notification","title":"Feat"},{"location":"changelog/#010-2021-12-25","text":"","title":"0.1.0 (2021-12-25)"},{"location":"changelog/#feat_15","text":"Add command to build package locally Ability to run shell commands Add make command for running tests Initial commit","title":"Feat"}]}